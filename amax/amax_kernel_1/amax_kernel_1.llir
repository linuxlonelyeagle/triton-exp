; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8]

; Function Attrs: nounwind
define void @amax_kernel_1_0d1d2d(float addrspace(1)* %0, float addrspace(1)* %1, i32 %2) local_unnamed_addr #0 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
  %5 = and i32 %4, 31
  %6 = and i32 %4, 7
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
  %8 = shl i32 %7, 3
  %9 = or i32 %8, %6
  %10 = sext i32 %9 to i64
  %11 = getelementptr float, float addrspace(1)* %0, i64 %10
  %12 = icmp slt i32 %9, %2
  %13 = tail call i32 asm sideeffect "@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(float addrspace(1)* %11, i1 %12, i32 -8388608, i1 %12) #0
  %14 = bitcast i32 %13 to <1 x float>
  %15 = extractelement <1 x float> %14, i64 0
  %16 = icmp eq i32 %5, 0
  %17 = tail call float asm "shfl.sync.bfly.b32 $0, $1, 0x4, 0x1f, 0xffffffff;", "=r,r"(float %15) #0
  %18 = tail call float @llvm.maxnum.f32(float %15, float %17)
  %19 = tail call float asm "shfl.sync.bfly.b32 $0, $1, 0x2, 0x1f, 0xffffffff;", "=r,r"(float %18) #0
  %20 = tail call float @llvm.maxnum.f32(float %18, float %19)
  %21 = tail call float asm "shfl.sync.bfly.b32 $0, $1, 0x1, 0x1f, 0xffffffff;", "=r,r"(float %20) #0
  %22 = tail call float @llvm.maxnum.f32(float %20, float %21)
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(float addrspace(3)* bitcast ([0 x i8] addrspace(3)* @global_smem to float addrspace(3)*), float %22, i1 %16) #0
  tail call void @llvm.nvvm.barrier0()
  %23 = sext i32 %4 to i64
  %24 = getelementptr float, float addrspace(3)* bitcast ([0 x i8] addrspace(3)* @global_smem to float addrspace(3)*), i64 %23
  %25 = load float, float addrspace(3)* %24, align 4
  %26 = icmp slt i32 %4, 1
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(float addrspace(3)* %24, float %25, i1 %26) #0
  tail call void @llvm.nvvm.barrier0()
  %27 = load i32, i32 addrspace(3)* bitcast ([0 x i8] addrspace(3)* @global_smem to i32 addrspace(3)*), align 4
  %28 = sext i32 %7 to i64
  %29 = getelementptr float, float addrspace(1)* %1, i64 %28
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %27, float addrspace(1)* %29, i1 true) #0
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable
declare i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nofree nosync nounwind readnone speculatable
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.maxnum.f32(float, float) #2

; Function Attrs: convergent nounwind
declare void @llvm.nvvm.barrier0() #3

attributes #0 = { nounwind }
attributes #1 = { nofree nosync nounwind readnone speculatable }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { convergent nounwind }

!nvvm.annotations = !{!0, !1, !0}

!0 = !{void (float addrspace(1)*, float addrspace(1)*, i32)* @amax_kernel_1_0d1d2d, !"kernel", i32 1}
!1 = !{void (float addrspace(1)*, float addrspace(1)*, i32)* @amax_kernel_1_0d1d2d, !"maxntidx", i32 128}
