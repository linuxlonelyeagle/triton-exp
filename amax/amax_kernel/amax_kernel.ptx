//
// Generated by LLVM NVPTX Back-End
//

.version 7.5
.target sm_80
.address_size 64

	// .globl	amax_kernel_0d1d23
.extern .shared .align 1 .b8 global_smem[];

.visible .entry amax_kernel_0d1d23(
	.param .u64 amax_kernel_0d1d23_param_0,
	.param .u64 amax_kernel_0d1d23_param_1,
	.param .u32 amax_kernel_0d1d23_param_2,
	.param .u32 amax_kernel_0d1d23_param_3
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<50>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<12>;

	ld.param.u32 	%r11, [amax_kernel_0d1d23_param_3];
	ld.param.u32 	%r10, [amax_kernel_0d1d23_param_2];
	ld.param.u64 	%rd3, [amax_kernel_0d1d23_param_1];
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 31;
	bfe.u32 	%r12, %r1, 3, 2;
	shr.u32 	%r13, %r1, 3;
	and.b32  	%r14, %r13, 28;
	or.b32  	%r3, %r12, %r14;
	and.b32  	%r4, %r1, 7;
	mov.u32 	%r15, %ctaid.x;
	shl.b32 	%r16, %r15, 5;
	or.b32  	%r5, %r16, %r2;
	setp.lt.s32 	%p1, %r11, 1;
	mov.f32 	%f29, 0fFF800000;
	mov.f32 	%f30, %f29;
	@%p1 bra 	LBB0_3;
	ld.param.u64 	%rd4, [amax_kernel_0d1d23_param_0];
	or.b32  	%r6, %r3, %r16;
	add.s32 	%r7, %r6, 16;
	mul.lo.s32 	%r17, %r6, %r11;
	mul.lo.s32 	%r18, %r7, %r11;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mul.wide.s32 	%rd6, %r18, 4;
	add.s64 	%rd2, %rd4, %rd6;
	mov.f32 	%f29, 0fFF800000;
	mov.u32 	%r49, 0;
	setp.lt.s32 	%p6, %r7, %r10;
	setp.lt.s32 	%p7, %r6, %r10;
	mov.f32 	%f30, %f29;
LBB0_2:
	or.b32  	%r24, %r49, %r4;
	setp.lt.s32 	%p8, %r24, %r11;
	and.pred  	%p2, %p7, %p8;
	and.pred  	%p4, %p6, %p8;
	mul.wide.s32 	%rd9, %r24, 4;
	add.s64 	%rd7, %rd1, %rd9;
	add.s64 	%rd8, %rd2, %rd9;
	mov.u32 	%r21, -8388608;
	@%p2 ld.global.b32 { %r20 }, [ %rd7 + 0 ];
	@!%p2 mov.u32 %r20, %r21;
	mov.b32 	%f11, %r20;
	@%p4 ld.global.b32 { %r22 }, [ %rd8 + 0 ];
	@!%p4 mov.u32 %r22, %r21;
	mov.b32 	%f12, %r22;
	setp.gt.f32 	%p9, %f29, %f11;
	setp.gt.f32 	%p10, %f30, %f12;
	selp.f32 	%f29, %f29, %f11, %p9;
	selp.f32 	%f30, %f30, %f12, %p10;
	add.s32 	%r49, %r49, 8;
	setp.lt.s32 	%p11, %r49, %r11;
	@%p11 bra 	LBB0_2;
LBB0_3:
	setp.lt.s32 	%p15, %r5, %r10;
	mul.wide.s32 	%rd11, %r5, 4;
	add.s64 	%rd10, %rd3, %rd11;
	setp.eq.s32 	%p12, %r4, 0;
	mov.b32 	%r26, %f29;
	shfl.sync.bfly.b32 %r25, %r26, 0x4, 0x1f, 0xffffffff;
	mov.b32 	%f13, %r25;
	max.f32 	%f14, %f29, %f13;
	mov.b32 	%r28, %f14;
	shfl.sync.bfly.b32 %r27, %r28, 0x2, 0x1f, 0xffffffff;
	mov.b32 	%f15, %r27;
	max.f32 	%f16, %f14, %f15;
	mov.b32 	%r30, %f16;
	shfl.sync.bfly.b32 %r29, %r30, 0x1, 0x1f, 0xffffffff;
	mov.b32 	%f17, %r29;
	max.f32 	%f18, %f16, %f17;
	shl.b32 	%r44, %r3, 2;
	mov.u32 	%r45, global_smem;
	add.s32 	%r31, %r45, %r44;
	mov.b32 	%r32, %f18;
	@%p12 st.shared.b32 [ %r31 + 0 ], %r32;
	mov.b32 	%r34, %f30;
	shfl.sync.bfly.b32 %r33, %r34, 0x4, 0x1f, 0xffffffff;
	mov.b32 	%f19, %r33;
	max.f32 	%f20, %f30, %f19;
	mov.b32 	%r36, %f20;
	shfl.sync.bfly.b32 %r35, %r36, 0x2, 0x1f, 0xffffffff;
	mov.b32 	%f21, %r35;
	max.f32 	%f22, %f20, %f21;
	mov.b32 	%r38, %f22;
	shfl.sync.bfly.b32 %r37, %r38, 0x1, 0x1f, 0xffffffff;
	mov.b32 	%f23, %r37;
	max.f32 	%f24, %f22, %f23;
	add.s32 	%r39, %r31, 64;
	mov.b32 	%r40, %f24;
	@%p12 st.shared.b32 [ %r39 + 0 ], %r40;
	bar.sync 	0;
	shl.b32 	%r46, %r1, 2;
	add.s32 	%r41, %r45, %r46;
	setp.lt.s32 	%p14, %r1, 32;
	ld.shared.u32 	%r42, [%r41];
	@%p14 st.shared.b32 [ %r41 + 0 ], %r42;
	bar.sync 	0;
	ld.shared.f32 	%f25, [%r31];
	ld.shared.f32 	%f26, [%r31+64];
	bar.sync 	0;
	st.shared.f32 	[%r31], %f25;
	st.shared.f32 	[%r31+64], %f26;
	bar.sync 	0;
	shl.b32 	%r47, %r2, 2;
	add.s32 	%r48, %r45, %r47;
	ld.shared.u32 	%r43, [%r48];
	@%p15 st.global.b32 [ %rd10 + 0 ], { %r43 };
	ret;

}
