#blocked = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [8, 4], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("/root/tutorials/test-dot.py":11:0)
#mma = #triton_gpu.nvidia_mma<{versionMajor = 2, versionMinor = 0, warpsPerCTA = [2, 2], instrShape = [16, 8]}>
#shared = #triton_gpu.shared<{vec = 8, perPhase = 2, maxPhase = 4, order = [1, 0], hasLeadingOffset = false}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:80", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @addmm_kernel(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg4: i32 loc("/root/tutorials/test-dot.py":11:0), %arg5: i32 loc("/root/tutorials/test-dot.py":11:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<32x32xf32, #mma> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<32x32xf16, #blocked> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c31_i32 = arith.constant 31 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<32x32xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<32xf16, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.muli %0, %c32_i32 : i32 loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc5)
    %4 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc5)
    %5 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc5)
    %6 = tt.splat %2 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc6)
    %7 = arith.addi %6, %3 : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc6)
    %8 = arith.muli %1, %c32_i32 : i32 loc(#loc7)
    %9 = tt.splat %8 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc8)
    %10 = tt.splat %8 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc8)
    %11 = arith.addi %9, %4 : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc8)
    %12 = arith.addi %10, %5 : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc8)
    %13 = tt.expand_dims %7 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc9)
    %14 = tt.splat %arg9 : i32 -> tensor<32x1xi32, #blocked> loc(#loc10)
    %15 = arith.muli %13, %14 : tensor<32x1xi32, #blocked> loc(#loc10)
    %16 = tt.expand_dims %4 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc11)
    %17 = tt.broadcast %15 : tensor<32x1xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc12)
    %18 = tt.broadcast %16 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc12)
    %19 = arith.addi %17, %18 : tensor<32x32xi32, #blocked> loc(#loc12)
    %20 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<32x32x!tt.ptr<f16>, #blocked> loc(#loc13)
    %21 = tt.addptr %20, %19 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc13)
    %22 = tt.expand_dims %3 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc14)
    %23 = tt.splat %arg10 : i32 -> tensor<32x1xi32, #blocked> loc(#loc15)
    %24 = arith.muli %22, %23 : tensor<32x1xi32, #blocked> loc(#loc15)
    %25 = tt.expand_dims %11 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc16)
    %26 = tt.broadcast %24 : tensor<32x1xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc17)
    %27 = tt.broadcast %25 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc17)
    %28 = arith.addi %26, %27 : tensor<32x32xi32, #blocked> loc(#loc17)
    %29 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<32x32x!tt.ptr<f16>, #blocked> loc(#loc18)
    %30 = tt.addptr %29, %28 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc18)
    %31 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<32x!tt.ptr<f16>, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc19)
    %32 = tt.addptr %31, %12 : tensor<32x!tt.ptr<f16>, #triton_gpu.slice<{dim = 0, parent = #mma}>>, tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc19)
    %33 = arith.addi %arg8, %c31_i32 : i32 loc(#loc50)
    %34 = arith.divsi %33, %c32_i32 : i32 loc(#loc51)
    %35 = tt.splat %arg6 : i32 -> tensor<32x1xi32, #blocked> loc(#loc23)
    %36 = arith.cmpi slt, %13, %35 : tensor<32x1xi32, #blocked> loc(#loc23)
    %37 = tt.broadcast %36 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc24)
    %38 = tt.splat %arg7 : i32 -> tensor<1x32xi32, #blocked> loc(#loc25)
    %39 = arith.cmpi slt, %25, %38 : tensor<1x32xi32, #blocked> loc(#loc25)
    %40 = tt.broadcast %39 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc26)
    %41 = arith.muli %arg10, %c32_i32 : i32 loc(#loc27)
    %42 = tt.splat %41 : i32 -> tensor<32x32xi32, #blocked> loc(#loc28)
    %43 = triton_gpu.local_alloc  : () -> !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc29)
    %44 = triton_gpu.local_alloc  : () -> !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc30)
    %45 = arith.cmpi sgt, %34, %c0_i32 : i32 loc(#loc31)
    %46 = tt.splat %arg8 : i32 -> tensor<1x32xi32, #blocked> loc(#loc32)
    %47 = arith.cmpi slt, %16, %46 : tensor<1x32xi32, #blocked> loc(#loc32)
    %48 = tt.broadcast %47 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc24)
    %49 = arith.andi %37, %48 : tensor<32x32xi1, #blocked> loc(#loc24)
    %50 = triton_gpu.memdesc_subview %43[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc29)
    %51 = tt.splat %45 : i1 -> tensor<32x32xi1, #blocked> loc(#loc31)
    %52 = arith.andi %51, %49 : tensor<32x32xi1, #blocked> loc(#loc31)
    %53 = triton_gpu.async_copy_global_to_local %21, %50 mask %52 other %cst_0 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc29)
    %54 = triton_gpu.async_commit_group %53 loc(#loc29)
    %55 = tt.splat %arg8 : i32 -> tensor<32x1xi32, #blocked> loc(#loc33)
    %56 = arith.cmpi slt, %22, %55 : tensor<32x1xi32, #blocked> loc(#loc33)
    %57 = tt.broadcast %56 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc26)
    %58 = arith.andi %57, %40 : tensor<32x32xi1, #blocked> loc(#loc26)
    %59 = triton_gpu.memdesc_subview %44[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc30)
    %60 = arith.andi %51, %58 : tensor<32x32xi1, #blocked> loc(#loc31)
    %61 = triton_gpu.async_copy_global_to_local %30, %59 mask %60 other %cst_0 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc30)
    %62 = triton_gpu.async_commit_group %61 loc(#loc30)
    %63 = arith.cmpi sgt, %34, %c1_i32 : i32 loc(#loc31)
    %64 = tt.addptr %21, %cst_1 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc34)
    %65 = tt.addptr %30, %42 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc28)
    %66 = arith.subi %arg8, %c32_i32 : i32 loc(#loc35)
    %67 = tt.splat %66 : i32 -> tensor<1x32xi32, #blocked> loc(#loc32)
    %68 = arith.cmpi slt, %16, %67 : tensor<1x32xi32, #blocked> loc(#loc32)
    %69 = tt.broadcast %68 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc24)
    %70 = arith.andi %37, %69 : tensor<32x32xi1, #blocked> loc(#loc24)
    %71 = triton_gpu.memdesc_subview %43[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc29)
    %72 = tt.splat %63 : i1 -> tensor<32x32xi1, #blocked> loc(#loc31)
    %73 = arith.andi %72, %70 : tensor<32x32xi1, #blocked> loc(#loc31)
    %74 = triton_gpu.async_copy_global_to_local %64, %71 mask %73 other %cst_0 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc29)
    %75 = triton_gpu.async_commit_group %74 loc(#loc29)
    %76 = tt.splat %66 : i32 -> tensor<32x1xi32, #blocked> loc(#loc33)
    %77 = arith.cmpi slt, %22, %76 : tensor<32x1xi32, #blocked> loc(#loc33)
    %78 = tt.broadcast %77 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc26)
    %79 = arith.andi %78, %40 : tensor<32x32xi1, #blocked> loc(#loc26)
    %80 = triton_gpu.memdesc_subview %44[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc30)
    %81 = arith.andi %72, %79 : tensor<32x32xi1, #blocked> loc(#loc31)
    %82 = triton_gpu.async_copy_global_to_local %65, %80 mask %81 other %cst_0 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc30)
    %83 = triton_gpu.async_commit_group %82 loc(#loc30)
    %84 = triton_gpu.async_wait %62 {num = 2 : i32} loc(#loc29)
    %85 = triton_gpu.memdesc_subview %50[%c0_i32, %c0_i32] : !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x16xf16, #shared, #triton_gpu.shared_memory> loc(#loc29)
    %86 = triton_gpu.local_load %85 : !tt.memdesc<32x16xf16, #shared, #triton_gpu.shared_memory> -> tensor<32x16xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>> loc(#loc29)
    %87 = triton_gpu.memdesc_subview %59[%c0_i32, %c0_i32] : !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<16x32xf16, #shared, #triton_gpu.shared_memory> loc(#loc30)
    %88 = triton_gpu.local_load %87 : !tt.memdesc<16x32xf16, #shared, #triton_gpu.shared_memory> -> tensor<16x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>> loc(#loc30)
    %89:10 = scf.for %arg12 = %c0_i32 to %34 step %c1_i32 iter_args(%arg13 = %cst, %arg14 = %64, %arg15 = %65, %arg16 = %c1_i32, %arg17 = %c0_i32, %arg18 = %50, %arg19 = %59, %arg20 = %83, %arg21 = %86, %arg22 = %88) -> (tensor<32x32xf32, #mma>, tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32x!tt.ptr<f16>, #blocked>, i32, i32, !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable>, !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable>, !triton_gpu.async.token, tensor<32x16xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>>, tensor<16x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>>)  : i32 {
      %113 = arith.subi %34, %c2_i32 : i32 loc(#loc31)
      %114 = arith.cmpi slt, %arg12, %113 : i32 loc(#loc31)
      %115 = triton_gpu.memdesc_subview %arg18[%c0_i32, %c16_i32] : !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x16xf16, #shared, #triton_gpu.shared_memory> loc(#loc29)
      %116 = triton_gpu.local_load %115 : !tt.memdesc<32x16xf16, #shared, #triton_gpu.shared_memory> -> tensor<32x16xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>> loc(#loc29)
      %117 = triton_gpu.memdesc_subview %arg19[%c16_i32, %c0_i32] : !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<16x32xf16, #shared, #triton_gpu.shared_memory> loc(#loc30)
      %118 = triton_gpu.local_load %117 : !tt.memdesc<16x32xf16, #shared, #triton_gpu.shared_memory> -> tensor<16x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>> loc(#loc30)
      %119 = tt.dot %arg21, %arg22, %arg13 : tensor<32x16xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>> * tensor<16x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>> -> tensor<32x32xf32, #mma> loc(#loc36)
      %120 = tt.addptr %arg14, %cst_1 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc34)
      %121 = tt.addptr %arg15, %42 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc28)
      %122 = arith.addi %arg16, %c1_i32 : i32 loc(#loc31)
      %123 = arith.cmpi slt, %122, %c2_i32 : i32 loc(#loc31)
      %124 = arith.select %123, %122, %c0_i32 : i32 loc(#loc31)
      %125 = arith.addi %arg12, %c2_i32 : i32 loc(#loc31)
      %126 = arith.muli %125, %c32_i32 : i32 loc(#loc37)
      %127 = arith.subi %arg8, %126 : i32 loc(#loc35)
      %128 = tt.splat %127 : i32 -> tensor<1x32xi32, #blocked> loc(#loc32)
      %129 = arith.cmpi slt, %16, %128 : tensor<1x32xi32, #blocked> loc(#loc32)
      %130 = tt.broadcast %129 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc24)
      %131 = arith.andi %37, %130 : tensor<32x32xi1, #blocked> loc(#loc24)
      %132 = triton_gpu.memdesc_subview %43[%124, %c0_i32, %c0_i32] : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc29)
      %133 = tt.splat %114 : i1 -> tensor<32x32xi1, #blocked> loc(#loc31)
      %134 = arith.andi %133, %131 : tensor<32x32xi1, #blocked> loc(#loc31)
      %135 = triton_gpu.async_copy_global_to_local %120, %132 mask %134 other %cst_0 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc29)
      %136 = triton_gpu.async_commit_group %135 loc(#loc29)
      %137 = tt.splat %127 : i32 -> tensor<32x1xi32, #blocked> loc(#loc33)
      %138 = arith.cmpi slt, %22, %137 : tensor<32x1xi32, #blocked> loc(#loc33)
      %139 = tt.broadcast %138 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc26)
      %140 = arith.andi %139, %40 : tensor<32x32xi1, #blocked> loc(#loc26)
      %141 = triton_gpu.memdesc_subview %44[%124, %c0_i32, %c0_i32] : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc30)
      %142 = arith.andi %133, %140 : tensor<32x32xi1, #blocked> loc(#loc31)
      %143 = triton_gpu.async_copy_global_to_local %121, %141 mask %142 other %cst_0 : tensor<32x32x!tt.ptr<f16>, #blocked> -> <32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc30)
      %144 = triton_gpu.async_commit_group %143 loc(#loc30)
      %145 = arith.addi %arg17, %c1_i32 : i32 loc(#loc31)
      %146 = arith.cmpi slt, %145, %c2_i32 : i32 loc(#loc31)
      %147 = arith.select %146, %145, %c0_i32 : i32 loc(#loc31)
      %148 = triton_gpu.memdesc_subview %43[%147, %c0_i32, %c0_i32] : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc29)
      %149 = triton_gpu.async_wait %arg20 {num = 2 : i32} loc(#loc29)
      %150 = triton_gpu.memdesc_subview %44[%147, %c0_i32, %c0_i32] : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc30)
      %151 = triton_gpu.memdesc_subview %148[%c0_i32, %c0_i32] : !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<32x16xf16, #shared, #triton_gpu.shared_memory> loc(#loc29)
      %152 = triton_gpu.local_load %151 : !tt.memdesc<32x16xf16, #shared, #triton_gpu.shared_memory> -> tensor<32x16xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>> loc(#loc29)
      %153 = triton_gpu.memdesc_subview %150[%c0_i32, %c0_i32] : !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<16x32xf16, #shared, #triton_gpu.shared_memory> loc(#loc30)
      %154 = triton_gpu.local_load %153 : !tt.memdesc<16x32xf16, #shared, #triton_gpu.shared_memory> -> tensor<16x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>> loc(#loc30)
      %155 = tt.dot %116, %118, %119 : tensor<32x16xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>> * tensor<16x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>> -> tensor<32x32xf32, #mma> loc(#loc36)
      scf.yield %155, %120, %121, %124, %147, %148, %150, %144, %152, %154 : tensor<32x32xf32, #mma>, tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32x!tt.ptr<f16>, #blocked>, i32, i32, !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable>, !tt.memdesc<32x32xf16, #shared, #triton_gpu.shared_memory, mutable>, !triton_gpu.async.token, tensor<32x16xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>>, tensor<16x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>> loc(#loc31)
    } loc(#loc31)
    %90 = triton_gpu.async_wait  {num = 0 : i32} loc(#loc31)
    triton_gpu.local_dealloc %43 : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    triton_gpu.local_dealloc %44 : !tt.memdesc<2x32x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    %91 = tt.splat %arg7 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc38)
    %92 = arith.cmpi slt, %12, %91 : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc38)
    %93 = tt.load %32, %92, %cst_2 : tensor<32x!tt.ptr<f16>, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc39)
    %94 = arith.sitofp %arg4 : i32 to f32 loc(#loc40)
    %95 = tt.splat %94 : f32 -> tensor<32x32xf32, #mma> loc(#loc40)
    %96 = arith.mulf %89#0, %95 : tensor<32x32xf32, #mma> loc(#loc40)
    %97 = arith.sitofp %arg5 : i32 to f16 loc(#loc41)
    %98 = tt.splat %97 : f16 -> tensor<32xf16, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc41)
    %99 = arith.mulf %93, %98 : tensor<32xf16, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc41)
    %100 = tt.expand_dims %99 {axis = 0 : i32} : tensor<32xf16, #triton_gpu.slice<{dim = 0, parent = #mma}>> -> tensor<1x32xf16, #mma> loc(#loc42)
    %101 = arith.extf %100 : tensor<1x32xf16, #mma> to tensor<1x32xf32, #mma> loc(#loc42)
    %102 = tt.broadcast %101 : tensor<1x32xf32, #mma> -> tensor<32x32xf32, #mma> loc(#loc42)
    %103 = arith.addf %96, %102 : tensor<32x32xf32, #mma> loc(#loc42)
    %104 = arith.truncf %103 : tensor<32x32xf32, #mma> to tensor<32x32xf16, #mma> loc(#loc43)
    %105 = tt.splat %arg11 : i32 -> tensor<32x1xi32, #blocked> loc(#loc44)
    %106 = arith.muli %105, %13 : tensor<32x1xi32, #blocked> loc(#loc44)
    %107 = tt.splat %arg3 : !tt.ptr<f16> -> tensor<32x1x!tt.ptr<f16>, #blocked> loc(#loc45)
    %108 = tt.addptr %107, %106 : tensor<32x1x!tt.ptr<f16>, #blocked>, tensor<32x1xi32, #blocked> loc(#loc45)
    %109 = tt.broadcast %108 : tensor<32x1x!tt.ptr<f16>, #blocked> -> tensor<32x32x!tt.ptr<f16>, #blocked> loc(#loc46)
    %110 = tt.addptr %109, %27 : tensor<32x32x!tt.ptr<f16>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc46)
    %111 = arith.andi %37, %40 : tensor<32x32xi1, #blocked> loc(#loc47)
    %112 = triton_gpu.convert_layout %104 : tensor<32x32xf16, #mma> -> tensor<32x32xf16, #blocked> loc(#loc48)
    tt.store %110, %112, %111 : tensor<32x32x!tt.ptr<f16>, #blocked> loc(#loc48)
    tt.return loc(#loc49)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/root/tutorials/test-dot.py":31:26)
#loc3 = loc("/root/tutorials/test-dot.py":32:26)
#loc4 = loc("/root/tutorials/test-dot.py":34:22)
#loc5 = loc("/root/tutorials/test-dot.py":34:50)
#loc6 = loc("/root/tutorials/test-dot.py":34:37)
#loc7 = loc("/root/tutorials/test-dot.py":35:22)
#loc8 = loc("/root/tutorials/test-dot.py":35:37)
#loc9 = loc("/root/tutorials/test-dot.py":37:30)
#loc10 = loc("/root/tutorials/test-dot.py":37:41)
#loc11 = loc("/root/tutorials/test-dot.py":37:60)
#loc12 = loc("/root/tutorials/test-dot.py":37:53)
#loc13 = loc("/root/tutorials/test-dot.py":37:22)
#loc14 = loc("/root/tutorials/test-dot.py":38:29)
#loc15 = loc("/root/tutorials/test-dot.py":38:40)
#loc16 = loc("/root/tutorials/test-dot.py":38:60)
#loc17 = loc("/root/tutorials/test-dot.py":38:52)
#loc18 = loc("/root/tutorials/test-dot.py":38:22)
#loc19 = loc("/root/tutorials/test-dot.py":39:27)
#loc20 = loc("/root/triton/python/triton/language/standard.py":40:22)
#loc21 = loc("/root/tutorials/test-dot.py":42:33)
#loc22 = loc("/root/triton/python/triton/language/standard.py":40:28)
#loc23 = loc("/root/tutorials/test-dot.py":45:37)
#loc24 = loc("/root/tutorials/test-dot.py":45:43)
#loc25 = loc("/root/tutorials/test-dot.py":50:80)
#loc26 = loc("/root/tutorials/test-dot.py":50:61)
#loc27 = loc("/root/tutorials/test-dot.py":55:33)
#loc28 = loc("/root/tutorials/test-dot.py":55:18)
#loc29 = loc("/root/tutorials/test-dot.py":44:12)
#loc30 = loc("/root/tutorials/test-dot.py":49:12)
#loc31 = loc("/root/tutorials/test-dot.py":42:22)
#loc32 = loc("/root/tutorials/test-dot.py":45:61)
#loc33 = loc("/root/tutorials/test-dot.py":50:36)
#loc34 = loc("/root/tutorials/test-dot.py":54:18)
#loc35 = loc("/root/tutorials/test-dot.py":45:65)
#loc36 = loc("/root/tutorials/test-dot.py":53:33)
#loc37 = loc("/root/tutorials/test-dot.py":45:69)
#loc38 = loc("/root/tutorials/test-dot.py":56:45)
#loc39 = loc("/root/tutorials/test-dot.py":56:19)
#loc40 = loc("/root/tutorials/test-dot.py":57:32)
#loc41 = loc("/root/tutorials/test-dot.py":57:47)
#loc42 = loc("/root/tutorials/test-dot.py":57:40)
#loc43 = loc("/root/tutorials/test-dot.py":58:23)
#loc44 = loc("/root/tutorials/test-dot.py":62:33)
#loc45 = loc("/root/tutorials/test-dot.py":62:21)
#loc46 = loc("/root/tutorials/test-dot.py":62:52)
#loc47 = loc("/root/tutorials/test-dot.py":63:39)
#loc48 = loc("/root/tutorials/test-dot.py":64:21)
#loc49 = loc("/root/tutorials/test-dot.py":64:4)
#loc50 = loc(callsite(#loc20 at #loc21))
#loc51 = loc(callsite(#loc22 at #loc21))
