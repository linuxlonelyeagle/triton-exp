#loc = loc("/root/tutorials/test-dot.py":11:0)
module {
  tt.func public @addmm_kernel(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg4: i32 loc("/root/tutorials/test-dot.py":11:0), %arg5: i32 loc("/root/tutorials/test-dot.py":11:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/root/tutorials/test-dot.py":11:0)) attributes {noinline = false} {
    %c31_i32 = arith.constant 31 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<32xf16> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<32x32xf16> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<32x32xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<32x32xf32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.muli %0, %c32_i32 : i32 loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc5)
    %4 = tt.splat %2 : i32 -> tensor<32xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32xi32> loc(#loc6)
    %6 = arith.muli %1, %c32_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<32xi32> loc(#loc8)
    %8 = arith.addi %7, %3 : tensor<32xi32> loc(#loc8)
    %9 = tt.expand_dims %5 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc9)
    %10 = tt.splat %arg9 : i32 -> tensor<32x1xi32> loc(#loc10)
    %11 = arith.muli %9, %10 : tensor<32x1xi32> loc(#loc10)
    %12 = tt.expand_dims %3 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc11)
    %13 = tt.broadcast %11 : tensor<32x1xi32> -> tensor<32x32xi32> loc(#loc12)
    %14 = tt.broadcast %12 : tensor<1x32xi32> -> tensor<32x32xi32> loc(#loc12)
    %15 = arith.addi %13, %14 : tensor<32x32xi32> loc(#loc12)
    %16 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<32x32x!tt.ptr<f16>> loc(#loc13)
    %17 = tt.addptr %16, %15 : tensor<32x32x!tt.ptr<f16>>, tensor<32x32xi32> loc(#loc13)
    %18 = tt.expand_dims %3 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc14)
    %19 = tt.splat %arg10 : i32 -> tensor<32x1xi32> loc(#loc15)
    %20 = arith.muli %18, %19 : tensor<32x1xi32> loc(#loc15)
    %21 = tt.expand_dims %8 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc16)
    %22 = tt.broadcast %20 : tensor<32x1xi32> -> tensor<32x32xi32> loc(#loc17)
    %23 = tt.broadcast %21 : tensor<1x32xi32> -> tensor<32x32xi32> loc(#loc17)
    %24 = arith.addi %22, %23 : tensor<32x32xi32> loc(#loc17)
    %25 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<32x32x!tt.ptr<f16>> loc(#loc18)
    %26 = tt.addptr %25, %24 : tensor<32x32x!tt.ptr<f16>>, tensor<32x32xi32> loc(#loc18)
    %27 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<32x!tt.ptr<f16>> loc(#loc19)
    %28 = tt.addptr %27, %8 : tensor<32x!tt.ptr<f16>>, tensor<32xi32> loc(#loc19)
    %29 = arith.addi %arg8, %c31_i32 : i32 loc(#loc53)
    %30 = arith.divsi %29, %c32_i32 : i32 loc(#loc54)
    %31 = tt.splat %arg6 : i32 -> tensor<32x1xi32> loc(#loc23)
    %32 = arith.cmpi slt, %9, %31 : tensor<32x1xi32> loc(#loc23)
    %33 = tt.broadcast %32 : tensor<32x1xi1> -> tensor<32x32xi1> loc(#loc24)
    %34 = tt.splat %arg7 : i32 -> tensor<1x32xi32> loc(#loc25)
    %35 = arith.cmpi slt, %21, %34 : tensor<1x32xi32> loc(#loc25)
    %36 = tt.broadcast %35 : tensor<1x32xi1> -> tensor<32x32xi1> loc(#loc26)
    %37 = arith.muli %arg10, %c32_i32 : i32 loc(#loc27)
    %38 = tt.splat %37 : i32 -> tensor<32x32xi32> loc(#loc28)
    %39:3 = scf.for %arg12 = %c0_i32 to %30 step %c1_i32 iter_args(%arg13 = %cst_2, %arg14 = %17, %arg15 = %26) -> (tensor<32x32xf32>, tensor<32x32x!tt.ptr<f16>>, tensor<32x32x!tt.ptr<f16>>)  : i32 {
      %67 = arith.muli %arg12, %c32_i32 : i32 loc(#loc30)
      %68 = arith.subi %arg8, %67 : i32 loc(#loc31)
      %69 = tt.splat %68 : i32 -> tensor<1x32xi32> loc(#loc32)
      %70 = arith.cmpi slt, %12, %69 : tensor<1x32xi32> loc(#loc32)
      %71 = tt.broadcast %70 : tensor<1x32xi1> -> tensor<32x32xi1> loc(#loc24)
      %72 = arith.andi %33, %71 : tensor<32x32xi1> loc(#loc24)
      %73 = tt.load %arg14, %72, %cst_0 : tensor<32x32x!tt.ptr<f16>> loc(#loc33)
      %74 = tt.splat %68 : i32 -> tensor<32x1xi32> loc(#loc34)
      %75 = arith.cmpi slt, %18, %74 : tensor<32x1xi32> loc(#loc34)
      %76 = tt.broadcast %75 : tensor<32x1xi1> -> tensor<32x32xi1> loc(#loc26)
      %77 = arith.andi %76, %36 : tensor<32x32xi1> loc(#loc26)
      %78 = tt.load %arg15, %77, %cst_0 : tensor<32x32x!tt.ptr<f16>> loc(#loc35)
      %79 = tt.dot %73, %78, %arg13 : tensor<32x32xf16> * tensor<32x32xf16> -> tensor<32x32xf32> loc(#loc36)
      %80 = tt.addptr %arg14, %cst_1 : tensor<32x32x!tt.ptr<f16>>, tensor<32x32xi32> loc(#loc37)
      %81 = tt.addptr %arg15, %38 : tensor<32x32x!tt.ptr<f16>>, tensor<32x32xi32> loc(#loc28)
      scf.yield %79, %80, %81 : tensor<32x32xf32>, tensor<32x32x!tt.ptr<f16>>, tensor<32x32x!tt.ptr<f16>> loc(#loc38)
    } loc(#loc29)
    %40 = tt.splat %arg7 : i32 -> tensor<32xi32> loc(#loc39)
    %41 = arith.cmpi slt, %8, %40 : tensor<32xi32> loc(#loc39)
    %42 = tt.load %28, %41, %cst : tensor<32x!tt.ptr<f16>> loc(#loc40)
    %43 = arith.sitofp %arg4 : i32 to f32 loc(#loc41)
    %44 = tt.splat %43 : f32 -> tensor<32x32xf32> loc(#loc41)
    %45 = arith.mulf %39#0, %44 : tensor<32x32xf32> loc(#loc41)
    %46 = arith.sitofp %arg5 : i32 to f16 loc(#loc42)
    %47 = tt.splat %46 : f16 -> tensor<32xf16> loc(#loc42)
    %48 = arith.mulf %42, %47 : tensor<32xf16> loc(#loc42)
    %49 = tt.expand_dims %48 {axis = 0 : i32} : tensor<32xf16> -> tensor<1x32xf16> loc(#loc43)
    %50 = arith.extf %49 : tensor<1x32xf16> to tensor<1x32xf32> loc(#loc43)
    %51 = tt.broadcast %50 : tensor<1x32xf32> -> tensor<32x32xf32> loc(#loc43)
    %52 = arith.addf %45, %51 : tensor<32x32xf32> loc(#loc43)
    %53 = arith.truncf %52 : tensor<32x32xf32> to tensor<32x32xf16> loc(#loc44)
    %54 = tt.splat %arg11 : i32 -> tensor<32x1xi32> loc(#loc45)
    %55 = arith.muli %54, %9 : tensor<32x1xi32> loc(#loc45)
    %56 = tt.splat %arg3 : !tt.ptr<f16> -> tensor<32x1x!tt.ptr<f16>> loc(#loc46)
    %57 = tt.addptr %56, %55 : tensor<32x1x!tt.ptr<f16>>, tensor<32x1xi32> loc(#loc46)
    %58 = tt.broadcast %57 : tensor<32x1x!tt.ptr<f16>> -> tensor<32x32x!tt.ptr<f16>> loc(#loc47)
    %59 = tt.addptr %58, %23 : tensor<32x32x!tt.ptr<f16>>, tensor<32x32xi32> loc(#loc47)
    %60 = tt.splat %arg6 : i32 -> tensor<32x1xi32> loc(#loc48)
    %61 = arith.cmpi slt, %9, %60 : tensor<32x1xi32> loc(#loc48)
    %62 = tt.splat %arg7 : i32 -> tensor<1x32xi32> loc(#loc49)
    %63 = arith.cmpi slt, %21, %62 : tensor<1x32xi32> loc(#loc49)
    %64 = tt.broadcast %61 : tensor<32x1xi1> -> tensor<32x32xi1> loc(#loc50)
    %65 = tt.broadcast %63 : tensor<1x32xi1> -> tensor<32x32xi1> loc(#loc50)
    %66 = arith.andi %64, %65 : tensor<32x32xi1> loc(#loc50)
    tt.store %59, %53, %66 : tensor<32x32x!tt.ptr<f16>> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/root/tutorials/test-dot.py":31:26)
#loc3 = loc("/root/tutorials/test-dot.py":32:26)
#loc4 = loc("/root/tutorials/test-dot.py":34:22)
#loc5 = loc("/root/tutorials/test-dot.py":34:50)
#loc6 = loc("/root/tutorials/test-dot.py":34:37)
#loc7 = loc("/root/tutorials/test-dot.py":35:22)
#loc8 = loc("/root/tutorials/test-dot.py":35:37)
#loc9 = loc("/root/tutorials/test-dot.py":37:30)
#loc10 = loc("/root/tutorials/test-dot.py":37:41)
#loc11 = loc("/root/tutorials/test-dot.py":37:60)
#loc12 = loc("/root/tutorials/test-dot.py":37:53)
#loc13 = loc("/root/tutorials/test-dot.py":37:22)
#loc14 = loc("/root/tutorials/test-dot.py":38:29)
#loc15 = loc("/root/tutorials/test-dot.py":38:40)
#loc16 = loc("/root/tutorials/test-dot.py":38:60)
#loc17 = loc("/root/tutorials/test-dot.py":38:52)
#loc18 = loc("/root/tutorials/test-dot.py":38:22)
#loc19 = loc("/root/tutorials/test-dot.py":39:27)
#loc20 = loc("/root/triton/python/triton/language/standard.py":40:22)
#loc21 = loc("/root/tutorials/test-dot.py":42:33)
#loc22 = loc("/root/triton/python/triton/language/standard.py":40:28)
#loc23 = loc("/root/tutorials/test-dot.py":45:37)
#loc24 = loc("/root/tutorials/test-dot.py":45:43)
#loc25 = loc("/root/tutorials/test-dot.py":50:80)
#loc26 = loc("/root/tutorials/test-dot.py":50:61)
#loc27 = loc("/root/tutorials/test-dot.py":55:33)
#loc28 = loc("/root/tutorials/test-dot.py":55:18)
#loc29 = loc("/root/tutorials/test-dot.py":42:22)
#loc30 = loc("/root/tutorials/test-dot.py":45:69)
#loc31 = loc("/root/tutorials/test-dot.py":45:65)
#loc32 = loc("/root/tutorials/test-dot.py":45:61)
#loc33 = loc("/root/tutorials/test-dot.py":44:12)
#loc34 = loc("/root/tutorials/test-dot.py":50:36)
#loc35 = loc("/root/tutorials/test-dot.py":49:12)
#loc36 = loc("/root/tutorials/test-dot.py":53:33)
#loc37 = loc("/root/tutorials/test-dot.py":54:18)
#loc38 = loc("/root/tutorials/test-dot.py":55:8)
#loc39 = loc("/root/tutorials/test-dot.py":56:45)
#loc40 = loc("/root/tutorials/test-dot.py":56:19)
#loc41 = loc("/root/tutorials/test-dot.py":57:32)
#loc42 = loc("/root/tutorials/test-dot.py":57:47)
#loc43 = loc("/root/tutorials/test-dot.py":57:40)
#loc44 = loc("/root/tutorials/test-dot.py":58:23)
#loc45 = loc("/root/tutorials/test-dot.py":62:33)
#loc46 = loc("/root/tutorials/test-dot.py":62:21)
#loc47 = loc("/root/tutorials/test-dot.py":62:52)
#loc48 = loc("/root/tutorials/test-dot.py":63:33)
#loc49 = loc("/root/tutorials/test-dot.py":63:58)
#loc50 = loc("/root/tutorials/test-dot.py":63:39)
#loc51 = loc("/root/tutorials/test-dot.py":64:21)
#loc52 = loc("/root/tutorials/test-dot.py":64:4)
#loc53 = loc(callsite(#loc20 at #loc21))
#loc54 = loc(callsite(#loc22 at #loc21))
