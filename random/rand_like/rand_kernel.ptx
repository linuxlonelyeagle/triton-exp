//
// Generated by LLVM NVPTX Back-End
//

.version 7.5
.target sm_80
.address_size 64

	// .globl	rand_kernel_0d1d23

.visible .entry rand_kernel_0d1d23(
	.param .u64 rand_kernel_0d1d23_param_0,
	.param .u32 rand_kernel_0d1d23_param_1,
	.param .u32 rand_kernel_0d1d23_param_2,
	.param .u32 rand_kernel_0d1d23_param_3
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<127>;
	.reg .f32 	%f<9>;
	.reg .b64 	%rd<7>;

	ld.param.u64 	%rd5, [rand_kernel_0d1d23_param_0];
	ld.param.u32 	%r5, [rand_kernel_0d1d23_param_1];
	mov.u32 	%r6, %tid.x;
	and.b32  	%r7, %r6, 7;
	ld.param.u32 	%r8, [rand_kernel_0d1d23_param_2];
	ld.param.u32 	%r9, [rand_kernel_0d1d23_param_3];
	shr.s32 	%r10, %r9, 31;
	mov.u32 	%r11, %ctaid.x;
	shl.b32 	%r12, %r11, 3;
	or.b32  	%r13, %r12, %r7;
	add.s32 	%r14, %r13, %r9;
	shr.s32 	%r15, %r8, 31;
	mov.u32 	%r16, 0;
	mov.u32 	%r17, -845247145;
	mul.hi.u32 	%r18, %r17, %r16;
	xor.b32  	%r19, %r18, %r8;
	xor.b32  	%r20, %r19, %r10;
	mov.u32 	%r21, -766435501;
	mul.hi.u32 	%r22, %r21, %r14;
	xor.b32  	%r23, %r22, %r15;
	mul.lo.s32 	%r24, %r14, -766435501;
	add.s32 	%r25, %r8, -1640531527;
	add.s32 	%r26, %r15, -1150833019;
	mul.hi.u32 	%r27, %r17, %r23;
	xor.b32  	%r28, %r27, %r25;
	mul.hi.u32 	%r29, %r21, %r20;
	xor.b32  	%r30, %r24, %r26;
	xor.b32  	%r31, %r30, %r29;
	mul.lo.s32 	%r32, %r23, -845247145;
	mul.lo.s32 	%r33, %r20, -766435501;
	add.s32 	%r34, %r8, 1013904242;
	add.s32 	%r35, %r15, 1993301258;
	mul.hi.u32 	%r36, %r17, %r31;
	xor.b32  	%r37, %r32, %r34;
	xor.b32  	%r38, %r37, %r36;
	mul.hi.u32 	%r39, %r21, %r28;
	xor.b32  	%r40, %r33, %r35;
	xor.b32  	%r41, %r40, %r39;
	mul.lo.s32 	%r42, %r31, -845247145;
	mul.lo.s32 	%r43, %r28, -766435501;
	add.s32 	%r44, %r8, -626627285;
	add.s32 	%r45, %r15, 842468239;
	mul.hi.u32 	%r46, %r17, %r41;
	xor.b32  	%r47, %r42, %r44;
	xor.b32  	%r48, %r47, %r46;
	mul.hi.u32 	%r49, %r21, %r38;
	xor.b32  	%r50, %r43, %r45;
	xor.b32  	%r51, %r50, %r49;
	mul.lo.s32 	%r52, %r41, -845247145;
	mul.lo.s32 	%r53, %r38, -766435501;
	add.s32 	%r54, %r8, 2027808484;
	add.s32 	%r55, %r15, -308364780;
	mul.hi.u32 	%r56, %r17, %r51;
	xor.b32  	%r57, %r52, %r54;
	xor.b32  	%r58, %r57, %r56;
	mul.hi.u32 	%r59, %r21, %r48;
	xor.b32  	%r60, %r53, %r55;
	xor.b32  	%r61, %r60, %r59;
	mul.lo.s32 	%r62, %r51, -845247145;
	mul.lo.s32 	%r63, %r48, -766435501;
	add.s32 	%r64, %r8, 387276957;
	add.s32 	%r65, %r15, -1459197799;
	mul.hi.u32 	%r66, %r17, %r61;
	xor.b32  	%r67, %r62, %r64;
	xor.b32  	%r68, %r67, %r66;
	mul.hi.u32 	%r69, %r21, %r58;
	xor.b32  	%r70, %r63, %r65;
	xor.b32  	%r71, %r70, %r69;
	mul.lo.s32 	%r72, %r61, -845247145;
	mul.lo.s32 	%r73, %r58, -766435501;
	add.s32 	%r74, %r8, -1253254570;
	add.s32 	%r75, %r15, 1684936478;
	mul.hi.u32 	%r76, %r17, %r71;
	xor.b32  	%r77, %r72, %r74;
	xor.b32  	%r78, %r77, %r76;
	mul.hi.u32 	%r79, %r21, %r68;
	xor.b32  	%r80, %r73, %r75;
	xor.b32  	%r81, %r80, %r79;
	mul.lo.s32 	%r82, %r71, -845247145;
	mul.lo.s32 	%r83, %r68, -766435501;
	add.s32 	%r84, %r8, 1401181199;
	add.s32 	%r85, %r15, 534103459;
	mul.hi.u32 	%r86, %r17, %r81;
	xor.b32  	%r87, %r82, %r84;
	xor.b32  	%r88, %r87, %r86;
	mul.hi.u32 	%r89, %r21, %r78;
	xor.b32  	%r90, %r83, %r85;
	xor.b32  	%r91, %r90, %r89;
	mul.lo.s32 	%r92, %r81, -845247145;
	mul.lo.s32 	%r93, %r78, -766435501;
	add.s32 	%r94, %r8, -239350328;
	add.s32 	%r95, %r15, -616729560;
	mul.hi.u32 	%r96, %r17, %r91;
	xor.b32  	%r97, %r92, %r94;
	xor.b32  	%r98, %r97, %r96;
	mul.hi.u32 	%r99, %r21, %r88;
	xor.b32  	%r100, %r93, %r95;
	xor.b32  	%r101, %r100, %r99;
	mul.lo.s32 	%r102, %r91, -845247145;
	mul.lo.s32 	%r103, %r88, -766435501;
	add.s32 	%r104, %r8, -1879881855;
	add.s32 	%r105, %r15, -1767562579;
	mul.hi.u32 	%r106, %r17, %r101;
	xor.b32  	%r107, %r102, %r104;
	xor.b32  	%r108, %r107, %r106;
	mul.hi.u32 	%r109, %r21, %r98;
	xor.b32  	%r110, %r103, %r105;
	xor.b32  	%r111, %r110, %r109;
	mul.lo.s32 	%r112, %r101, -845247145;
	mul.lo.s32 	%r113, %r98, -766435501;
	shr.s32 	%r114, %r108, 31;
	xor.b32  	%r115, %r114, %r108;
	cvt.rn.f32.s32 	%f1, %r115;
	mul.f32 	%f2, %f1, 0f2FFFFFFF;
	shr.s32 	%r116, %r112, 31;
	xor.b32  	%r117, %r116, %r112;
	cvt.rn.f32.s32 	%f3, %r117;
	mul.f32 	%f4, %f3, 0f2FFFFFFF;
	shr.s32 	%r118, %r111, 31;
	xor.b32  	%r119, %r118, %r111;
	cvt.rn.f32.s32 	%f5, %r119;
	mul.f32 	%f6, %f5, 0f2FFFFFFF;
	shr.s32 	%r120, %r113, 31;
	xor.b32  	%r121, %r120, %r113;
	cvt.rn.f32.s32 	%f7, %r121;
	mul.f32 	%f8, %f7, 0f2FFFFFFF;
	shl.b32 	%r122, %r11, 5;
	or.b32  	%r123, %r122, %r7;
	or.b32  	%r124, %r123, 8;
	or.b32  	%r125, %r123, 16;
	or.b32  	%r126, %r123, 24;
	setp.lt.s32 	%p1, %r123, %r5;
	mul.wide.s32 	%rd6, %r123, 4;
	add.s64 	%rd1, %rd5, %rd6;
	mov.b32 	%r1, %f2;
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r1 };
	setp.lt.s32 	%p2, %r124, %r5;
	add.s64 	%rd2, %rd1, 32;
	mov.b32 	%r2, %f4;
	@%p2 st.global.b32 [ %rd2 + 0 ], { %r2 };
	setp.lt.s32 	%p3, %r125, %r5;
	add.s64 	%rd3, %rd1, 64;
	mov.b32 	%r3, %f6;
	@%p3 st.global.b32 [ %rd3 + 0 ], { %r3 };
	setp.lt.s32 	%p4, %r126, %r5;
	add.s64 	%rd4, %rd1, 96;
	mov.b32 	%r4, %f8;
	@%p4 st.global.b32 [ %rd4 + 0 ], { %r4 };
	ret;

}
	// .globl	__nv_umulhi
.visible .func  (.param .b32 func_retval0) __nv_umulhi(
	.param .b32 __nv_umulhi_param_0,
	.param .b32 __nv_umulhi_param_1
)
{
	.reg .b32 	%r<4>;

	ld.param.u32 	%r1, [__nv_umulhi_param_0];
	ld.param.u32 	%r2, [__nv_umulhi_param_1];
	mul.hi.u32 	%r3, %r1, %r2;
	st.param.b32 	[func_retval0+0], %r3;
	ret;

}
