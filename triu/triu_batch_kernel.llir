; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

; Function Attrs: nounwind
define void @triu_batch_kernel_0d1d2345d(float addrspace(1)* %0, float addrspace(1)* %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
  %8 = lshr i32 %7, 3
  %9 = and i32 %8, 31
  %10 = and i32 %7, 7
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y()
  %13 = shl i32 %11, 5
  %14 = or i32 %9, %13
  %15 = or i32 %13, 16
  %16 = add i32 %15, %9
  %17 = icmp slt i32 %14, %2
  %18 = icmp slt i32 %16, %2
  %19 = mul i32 %14, %3
  %20 = mul i32 %16, %3
  %21 = sext i32 %19 to i64
  %22 = getelementptr float, float addrspace(1)* %0, i64 %21
  %23 = sext i32 %20 to i64
  %24 = getelementptr float, float addrspace(1)* %0, i64 %23
  %25 = getelementptr float, float addrspace(1)* %1, i64 %21
  %26 = getelementptr float, float addrspace(1)* %1, i64 %23
  %27 = shl i32 %12, 3
  %28 = or i32 %27, %10
  %29 = icmp slt i32 %28, %3
  %30 = and i1 %17, %29
  %31 = and i1 %18, %29
  %32 = sext i32 %28 to i64
  %33 = getelementptr float, float addrspace(1)* %22, i64 %32
  %34 = getelementptr float, float addrspace(1)* %24, i64 %32
  %35 = tail call i32 asm sideeffect "@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(float addrspace(1)* %33, i1 %30, i32 0, i1 %30) #0
  %36 = tail call i32 asm sideeffect "@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(float addrspace(1)* %34, i1 %31, i32 0, i1 %31) #0
  %.frozen = freeze i32 %28
  %.frozen1 = freeze i32 %4
  %37 = sdiv i32 %.frozen, %.frozen1
  %38 = mul i32 %37, %.frozen1
  %.decomposed = sub i32 %.frozen, %38
  %39 = add i32 %37, %5
  %.not = icmp sgt i32 %39, %.decomposed
  %40 = getelementptr float, float addrspace(1)* %25, i64 %32
  %41 = getelementptr float, float addrspace(1)* %26, i64 %32
  %42 = select i1 %.not, i32 0, i32 %35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %42, float addrspace(1)* %40, i1 %30) #0
  %43 = select i1 %.not, i32 0, i32 %36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %43, float addrspace(1)* %41, i1 %31) #0
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable
declare i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nofree nosync nounwind readnone speculatable
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: nofree nosync nounwind readnone speculatable
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

attributes #0 = { nounwind }
attributes #1 = { nofree nosync nounwind readnone speculatable }

!nvvm.annotations = !{!0, !1, !0}

!0 = !{void (float addrspace(1)*, float addrspace(1)*, i32, i32, i32, i32)* @triu_batch_kernel_0d1d2345d, !"kernel", i32 1}
!1 = !{void (float addrspace(1)*, float addrspace(1)*, i32, i32, i32, i32)* @triu_batch_kernel_0d1d2345d, !"maxntidx", i32 128}
