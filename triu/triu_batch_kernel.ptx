//
// Generated by LLVM NVPTX Back-End
//

.version 7.5
.target sm_80
.address_size 64

	// .globl	triu_batch_kernel_0d1d2345d

.visible .entry triu_batch_kernel_0d1d2345d(
	.param .u64 triu_batch_kernel_0d1d2345d_param_0,
	.param .u64 triu_batch_kernel_0d1d2345d_param_1,
	.param .u32 triu_batch_kernel_0d1d2345d_param_2,
	.param .u32 triu_batch_kernel_0d1d2345d_param_3,
	.param .u32 triu_batch_kernel_0d1d2345d_param_4,
	.param .u32 triu_batch_kernel_0d1d2345d_param_5
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<14>;

	ld.param.u64 	%rd5, [triu_batch_kernel_0d1d2345d_param_0];
	ld.param.u64 	%rd6, [triu_batch_kernel_0d1d2345d_param_1];
	mov.u32 	%r7, %tid.x;
	ld.param.u32 	%r8, [triu_batch_kernel_0d1d2345d_param_2];
	bfe.u32 	%r9, %r7, 3, 5;
	ld.param.u32 	%r10, [triu_batch_kernel_0d1d2345d_param_3];
	and.b32  	%r11, %r7, 7;
	ld.param.u32 	%r12, [triu_batch_kernel_0d1d2345d_param_4];
	ld.param.u32 	%r13, [triu_batch_kernel_0d1d2345d_param_5];
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ctaid.y;
	shl.b32 	%r16, %r14, 5;
	or.b32  	%r17, %r9, %r16;
	add.s32 	%r18, %r17, 16;
	setp.lt.s32 	%p7, %r17, %r8;
	setp.lt.s32 	%p8, %r18, %r8;
	mul.lo.s32 	%r19, %r17, %r10;
	mul.lo.s32 	%r20, %r18, %r10;
	mul.wide.s32 	%rd7, %r19, 4;
	add.s64 	%rd8, %rd5, %rd7;
	mul.wide.s32 	%rd9, %r20, 4;
	add.s64 	%rd10, %rd5, %rd9;
	add.s64 	%rd11, %rd6, %rd7;
	add.s64 	%rd12, %rd6, %rd9;
	shl.b32 	%r21, %r15, 3;
	or.b32  	%r22, %r21, %r11;
	setp.lt.s32 	%p9, %r22, %r10;
	and.pred  	%p1, %p7, %p9;
	and.pred  	%p3, %p8, %p9;
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd1, %rd8, %rd13;
	add.s64 	%rd2, %rd10, %rd13;
	mov.u32 	%r2, 0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r1, %r2;
	@%p3 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r3, %r2;
	div.s32 	%r25, %r22, %r12;
	mul.lo.s32 	%r26, %r25, %r12;
	sub.s32 	%r27, %r22, %r26;
	add.s32 	%r28, %r25, %r13;
	setp.gt.s32 	%p10, %r28, %r27;
	add.s64 	%rd3, %rd11, %rd13;
	add.s64 	%rd4, %rd12, %rd13;
	selp.b32 	%r5, 0, %r1, %p10;
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r5 };
	selp.b32 	%r6, 0, %r3, %p10;
	@%p3 st.global.b32 [ %rd4 + 0 ], { %r6 };
	ret;

}
