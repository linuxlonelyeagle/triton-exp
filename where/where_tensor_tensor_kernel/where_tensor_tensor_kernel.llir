; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

; Function Attrs: nounwind
define void @where_tensor_tensor_kernel_0d1d2d3d4d(i1 addrspace(1)* %0, float addrspace(1)* %1, float addrspace(1)* %2, float addrspace(1)* %3, i32 %4) local_unnamed_addr #0 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
  %7 = and i32 %6, 3
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
  %9 = shl i32 %8, 2
  %10 = or i32 %9, %7
  %11 = icmp slt i32 %10, %4
  %12 = sext i32 %10 to i64
  %13 = getelementptr i1, i1 addrspace(1)* %0, i64 %12
  %14 = bitcast i1 addrspace(1)* %13 to i8 addrspace(1)*
  %15 = tail call i8 asm sideeffect "@$2 ld.global.b8 { $0 }, [ $1 + 0 ];", "=c,l,b"(i8 addrspace(1)* %14, i1 %11) #0
  %16 = getelementptr float, float addrspace(1)* %1, i64 %12
  %17 = tail call i32 asm sideeffect "@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(float addrspace(1)* %16, i1 %11) #0
  %18 = bitcast i32 %17 to <1 x float>
  %19 = extractelement <1 x float> %18, i64 0
  %20 = getelementptr float, float addrspace(1)* %2, i64 %12
  %21 = tail call i32 asm sideeffect "@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(float addrspace(1)* %20, i1 %11) #0
  %22 = bitcast i32 %21 to <1 x float>
  %23 = extractelement <1 x float> %22, i64 0
  %.not = icmp eq i8 %15, 0
  %24 = select i1 %.not, float %23, float %19
  %25 = getelementptr float, float addrspace(1)* %3, i64 %12
  %26 = bitcast float %24 to i32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %26, float addrspace(1)* %25, i1 %11) #0
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable
declare i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nofree nosync nounwind readnone speculatable
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

attributes #0 = { nounwind }
attributes #1 = { nofree nosync nounwind readnone speculatable }

!nvvm.annotations = !{!0, !1, !0}

!0 = !{void (i1 addrspace(1)*, float addrspace(1)*, float addrspace(1)*, float addrspace(1)*, i32)* @where_tensor_tensor_kernel_0d1d2d3d4d, !"kernel", i32 1}
!1 = !{void (i1 addrspace(1)*, float addrspace(1)*, float addrspace(1)*, float addrspace(1)*, i32)* @where_tensor_tensor_kernel_0d1d2d3d4d, !"maxntidx", i32 128}
